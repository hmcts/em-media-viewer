#!groovy

properties([
// H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
pipelineTriggers([cron('H 05 * * *')])
])

@Library("Infrastructure")

def type = "nodejs"
def product = "em"
def component = "media-viewer"

env.DOCASSEMBLY_URL = "http://dg-docassembly-aat.service.core-compute-aat.internal"
env.DM_STORE_APP_URL = "http://dm-store-aat.service.core-compute-aat.internal"
env.ANNOTATION_API_URL = "http://em-anno-aat.service.core-compute-aat.internal"
env.ICP_API_URL = "http://em-icp-aat.service.core-compute-aat.internal"
env.NPA_URL = "http://em-npa-aat.service.core-compute-aat.internal"
env.IDAM_URL = "http://idam-api.aat.platform.hmcts.net"
env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
env.REDIRECT_URL = "https://em-show-aat.service.core-compute-aat.internal/oauth2/callback"

def secrets = [
        's2s-${env}': [
                secret('microservicekey-em-gw', 'S2S_KEY')
        ],
        'rpa-${env}': [
                secret('show-oauth2-token', 'IDAM_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {
    loadVaultSecrets(secrets)
    //enableCrossBrowserTest()
    //enableSecurityScan()
    enableFullFunctionalTest(200)

    after('fullFunctionalTest') {
        publishHTML([
                allowMissing         : true,
                alwaysLinkToLastBuild: true,
                keepAll              : true,
                reportDir            : "functional-output/reports/html",
                reportFiles          : 'index.html',
                reportName           : 'EM-MediaViewer Full functional Tests'
        ])
    }
}