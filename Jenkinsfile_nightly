#!groovy

properties([
  [
    $class       : 'GithubProjectProperty',
    displayName  : 'MediaViewer',
    projectUrlStr: 'https://github.com/hmcts/em-media-viewer/'
  ],
  pipelineTriggers([
    cron('H 05 * * *')
  ])
])

@Library("Infrastructure")

def type = "nodejs"
def product = "em"
def component = "media-viewer"
def channel   = '#em-dev-chat'

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

withNightlyPipeline(type, product, component) {
  disableLegacyDeployment()
//  enableSecurityScan()
  enableSlackNotifications(channel)
  enableFullFunctionalTest(200)
  enableCrossBrowserTest()

  env.TEST_URL = 'http://em-showcase-aat.service.core-compute-aat.internal/media-viewer'

  after('checkout') {
    sh ("rm -rf node_modules")
    sh ("yarn cache clean")
    sh ('npm rebuild node-sass')
    sh ('yarn install --force')
    sh ('yarn setup')
  }

  after('build') {
    yarnBuilder.yarn('build')
  }

  after('functionalTest') {
    publishHTML([
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "functional-output/reports/html",
      reportFiles          : 'index.html',
      reportName           : 'MediaViewer Functional Tests'
    ])
  }

  after('crossBrowserTest') {
    publishHTML([
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "reports/tests/crossbrowser/",
      reportFiles          : 'index.html',
      reportName           : 'Media Viewer Cross Browser Tests'
    ])
  }

  after('securityScan') {
    publishHTML([
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "reports/tests/",
      reportFiles          : 'activescan.html',
      reportName           : 'MediaViewer ZAP Security Scan Report'
    ])
  }
}
